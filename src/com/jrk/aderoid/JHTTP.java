package com.jrk.aderoid;import java.io.IOException;import java.util.ArrayList;import java.util.List;import java.util.regex.Matcher;import java.util.regex.Pattern;import org.apache.http.HttpEntity;import org.apache.http.HttpResponse;import org.apache.http.NameValuePair;import org.apache.http.client.ClientProtocolException;import org.apache.http.client.ResponseHandler;import org.apache.http.client.entity.UrlEncodedFormEntity;import org.apache.http.client.methods.HttpGet;import org.apache.http.client.methods.HttpPost;import org.apache.http.cookie.Cookie;import org.apache.http.impl.client.BasicResponseHandler;import org.apache.http.impl.client.DefaultHttpClient;import org.apache.http.message.BasicNameValuePair;import org.apache.http.util.EntityUtils;public class JHTTP {	DefaultHttpClient httpclient;	ResponseHandler<String> responseHandler;	HttpPost httpost;	HttpGet httpget;	public JHTTP() {		httpclient = new DefaultHttpClient();	}	public String sendGET(String link) {		String responseBody = null;		try {			httpget = new HttpGet(link);			responseHandler = new BasicResponseHandler();			responseBody = httpclient.execute(httpget, responseHandler);		} catch (ClientProtocolException e) {			e.printStackTrace();		} catch (IOException e) {			e.printStackTrace();		}		return responseBody;	}				public String sendPOST(String link, String[] k, String[] v) {		String responseBody = null;		try {			httpost = new HttpPost(link);			List<NameValuePair> nvps = new ArrayList<NameValuePair>();			for (int i = 0; i < k.length; i++)				nvps.add(new BasicNameValuePair(k[i], v[i]));			httpost.setEntity(new UrlEncodedFormEntity(nvps));			responseHandler = new BasicResponseHandler();			responseBody = httpclient.execute(httpost, responseHandler);		} catch (ClientProtocolException e) {			e.printStackTrace();		} catch (IOException e) {			e.printStackTrace();		}		return responseBody;	}	public void displayCookie(String link) {		try {			httpget = new HttpGet(link);			HttpResponse response = httpclient.execute(httpget);			HttpEntity entity = response.getEntity();			System.out.println("Login form get: " + response.getStatusLine());			System.out.println("Initial set of cookies:");			List<Cookie> cookies = httpclient.getCookieStore().getCookies();			if (cookies.isEmpty()) {				System.out.println("None");			} else {				for (int i = 0; i < cookies.size(); i++) {					System.out.println("- " + cookies.get(i).toString());				}			}		} catch (ClientProtocolException e) {			e.printStackTrace();		} catch (IOException e) {			e.printStackTrace();		}	}	public void disconnect() {		httpclient.getConnectionManager().shutdown();	}	public ArrayList extractGET(String link, String regex, int pos) {		ArrayList out = new ArrayList();		Pattern p = Pattern.compile(regex);		String s = this.sendGET(link);		Matcher m = p.matcher(s);		while (m.find()) {			out.add(m.group(pos));		}		return out;	}	public ArrayList titleGET(String link) {		return this.extractGET(link, "<title>(.+)</title>", 1);	}}